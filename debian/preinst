#!/bin/sh
# preinst script for pengwin-base
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <new-preinst> `install'
#        * <new-preinst> `install' <old-version>
#        * <new-preinst> `upgrade' <old-version>
#        * <old-preinst> `abort-upgrade' <new-version>
# for details, see https://www.debian.org/doc/debian-policy/ or
# the debian-policy package

case "$1" in
install)
  TMPDIR="/run/dpkg.pengwin-base.inst"

  # Ensure all necessary filesystem directories exist
  mkdir -p /etc/fonts
  mkdir -p /etc/profile.d
  mkdir -p /etc/fish/conf.d
  mkdir -p /etc/apt/sources.list.d
  mkdir -p /etc/dpkg/origins
  mkdir -p "${TMPDIR}"

  # List of files we change / require backing up
  FILES="/etc/fonts/local.conf \
			/usr/lib/os-release \
			/etc/environment \
			/etc/apt/preferences \
			/etc/apt/sources.list \
			/etc/apt/trusted.gpg"

  # dpkg-divert all currently existing files since
  # we overwrite a lot of other package's files
  DIVERT_SUFFIX=".pengwin-divert"

  for FILE in ${FILES}; do
    if [ -f "${FILE}" ]; then
      echo "Diverting ${FILE}"
      dpkg-divert --add --rename --divert "${FILE}${DIVERT_SUFFIX}" "${FILE}"
    fi
  done
  ;;

upgrade) ;;

\
abort-upgrade) ;;

\
*)
  echo "preinst called with unknown argument \`$1'" >&2
  exit 1
  ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
